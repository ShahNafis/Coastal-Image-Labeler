(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{165:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return b}));var n=a(2),r=a(9),o=(a(0),a(178)),i={id:"indexDoc",title:"Coastal Image Labeler",sidebar_label:"Introduction"},l={id:"indexDoc",title:"Coastal Image Labeler",description:"Project Overview",source:"@site/docs/index.md",permalink:"/Coastal-Image-Labeler/docs/indexDoc",editUrl:"https://github.com/UNCG-DAISY/Coastal-Image-Labeler/edit/master/docs/docs/index.md",sidebar_label:"Introduction",sidebar:"docs",next:{title:"Contributor Covenant Code of Conduct",permalink:"/Coastal-Image-Labeler/docs/code_of_conduct"}},c=[{value:"Project Overview",id:"project-overview",children:[]},{value:"Project Goals",id:"project-goals",children:[]}],s={rightToc:c};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"project-overview"},"Project Overview"),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://uncg-daisy.github.io/Coastal-Image-Labeler/"}),Object(o.b)("img",Object(n.a)({parentName:"a"},{src:"https://img.shields.io/badge/Documentation-Click%20Me-brightgreen",alt:"Documentation"}))),"\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/UNCG-DAISY/Coastal-Image-Labeler/commits/master"}),Object(o.b)("img",Object(n.a)({parentName:"a"},{src:"https://img.shields.io/github/last-commit/UNCG-DAISY/Coastal-Image-Labeler",alt:"Last Commit"}))),"\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://zenodo.org/badge/latestdoi/226252747"}),Object(o.b)("img",Object(n.a)({parentName:"a"},{src:"https://zenodo.org/badge/226252747.svg",alt:"DOI"}))),"\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://travis-ci.com/UNCG-DAISY/Coastal-Image-Labeler.svg?branch=master"}),Object(o.b)("img",Object(n.a)({parentName:"a"},{src:"https://travis-ci.com/UNCG-DAISY/Coastal-Image-Labeler.svg?branch=master",alt:"BUILD"})))),Object(o.b)("p",null,"Generally, the the Coastal Image Labeler is server that provides users with\nimages to be labeled using a given set of questions. We designed the labeler to\nbe hosted on a virtual machine, exposed via a web address. Users interactively\nlabel images, with labels written to a database and exported later by an admin."),Object(o.b)("p",null,"There are two general roles in this project. "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"First, an admin \u2014 who controls\nuploading of images, developing questions for the labeler to ask, assigning\nroles to users, managing the VM host of the project, and exporting data from\nthe database. "),Object(o.b)("li",{parentName:"ul"},"Second, a labeler \u2014 who logs onto the server and labels images.")),Object(o.b)("p",null,"The Coastal Image Labeler Documentation is focused on:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Describing the goals of the project and our ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"/Coastal-Image-Labeler/docs/code_of_conduct"}),"Code of Conduct"),"."),Object(o.b)("li",{parentName:"ul"},"Documenting the underlying source code for the labeling tool and how to\ndeal with any admin tasks \u2014 see the ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"code_documentation/overview.md"}),"Code Documentation")," section."),Object(o.b)("li",{parentName:"ul"},"Documenting how to interact with the labeling tool as a User \u2014 see the ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"user_documentation/overview.md"}),"User Documentation")," section.")),Object(o.b)("h2",{id:"project-goals"},"Project Goals"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"The Coastal Image Labeler (CILabel) is designed to collaboratively label\ncoastal images and then provide these labeled images as open data (FAIR) for\ngeneral community use.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Why labeling images?")),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Labeled images are important for supervised machine learning research. There are\nmany well known labeled image databases (e.g., ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"http://www.image-net.org"}),"ImageNet"),"),\nbut these existing databases tend to focus on general features (e.g., cats, dogs, horses, etc.). Our goal with this project is to develop a discipline-specific\ndatabase of labeled images that is relevant for coastal scientists."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Why not use an existing tool for labeling?"),"  "),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Many good labeling tools already exist, but our goal with this project is to\ncreate a tool for ",Object(o.b)("em",{parentName:"li"},"collaboratively")," labeling coastal images. Additionally,\nwe wanted a tool to easily accommodate multiple users labeling a single\nimages (to ensure correct labeling via consensus)."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"The Coastal Image Labeler Documentation is focused on:"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Describing the goals of the project and our ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"/Coastal-Image-Labeler/docs/code_of_conduct"}),"Code of Conduct"),"."),Object(o.b)("li",{parentName:"ul"},"Documenting the underlying source code for the labeling tool \u2014 see the ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"code_documentation/overview.md"}),"Code Documentation")," section."),Object(o.b)("li",{parentName:"ul"},"Documenting how to interact with the labeling tool as a User \u2014 see the ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"user_documentation/overview.md"}),"User Documentation")," section.")))))}b.isMDXComponent=!0},178:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=b(a),p=n,d=m["".concat(i,".").concat(p)]||m[p]||u[p]||o;return a?r.a.createElement(d,l(l({ref:t},s),{},{components:a})):r.a.createElement(d,l({ref:t},s))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);